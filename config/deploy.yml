# Name of your application. Used to uniquely configure containers.
service: f2

# Name of the container image.
image: ghcr.io/dreikanter/f2

# Deploy to these servers - using destinations.
destinations:
  staging:
    servers:
      web:
        - 123.123.123.123
    proxy:
      ssl: true
      host: dev.frf.im
    env:
      clear:
        RAILS_ENV: staging
        DATABASE_URL: postgres://f2:password@f2-db:5432/f2_staging
    accessories:
      db:
        image: postgres:17
        host: 123.123.123.123
        port: "127.0.0.1:5432:5432"
        env:
          clear:
            POSTGRES_DB: f2_staging
            POSTGRES_USER: f2
          secret:
            - POSTGRES_PASSWORD
        directories:
          - data:/var/lib/postgresql/data

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username: dreikanter

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Shared ENV variables for all destinations
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    # Run the Solid Queue Supervisor inside the web server's Puma process to do jobs.
    SOLID_QUEUE_IN_PUMA: true
    # Use f2-db for a db accessory server on same machine via local kamal docker network.
    DB_HOST: f2-db

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.3.5
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY
# Use a different ssh user than root
# ssh:
#   user: app

# Accessories are now defined in destinations above
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
